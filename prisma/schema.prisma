generator client {
  provider = "prisma-client"
  output   = "../app/generated/prisma"
  previewFeatures = ["driverAdapters", "queryCompiler"]
  runtime = "bun"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum WorkflowStatus {
  RUNNING
  SUCCESS
  FAILED
}

enum ScheduleStatus {
  ACTIVE
  PAUSED
  ERROR
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  Workflows Workflow[]
}

model Workflow {
  id         String              @id @default(uuid())
  userId     String
  workflow   Json                // JSONB column storing nodes + edges
  user       User                @relation(fields: [userId], references: [id])
  Schedules  WorkflowSchedule[]
  Executions WorkflowExecution[]

  @@index([userId])              
}

model Agent {
  id        String   @id @default(uuid())
  type      String
  functions Json     
  metadata  Json?    
}

model WorkflowSchedule {
  id             String    @id @default(uuid())
  workflowId     String
  cronExpression String
  timezone       String
  status         ScheduleStatus
  nextRunAt      DateTime
  lastRunAt      DateTime?
  workflow       Workflow  @relation(fields: [workflowId], references: [id])

  @@index([workflowId])      
  @@index([nextRunAt])       
}

model WorkflowExecution {
  id         String         @id @default(uuid())
  workflowId String
  startedAt  DateTime       @default(now())
  endedAt    DateTime?
  status     WorkflowStatus
  output     Json
  workflow   Workflow       @relation(fields: [workflowId], references: [id])

  @@index([workflowId])      
  @@index([startedAt])       
}